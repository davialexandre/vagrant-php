input {
    file {
        path => "/var/log/nginx/access.log"
        start_position => beginning
        type => "nginx_accesslog"
    }
    file {
        path => "/var/log/mysql/mysql-slow.log"
        start_position => beginning
        type => "mysql_slowlog"
        codec => multiline {
            pattern => "^# (User@Host|Time):"
            what => next
        }
    }
    file {
        path => "/var/log/php-fpm/*.log.slow"
        start_position => beginning
        type => "php-fpm_slowlog"
        codec => multiline {
            pattern => "^%{PHPFPMSLOWLOGDATE}"
            patterns_dir => [ "{{ logstash_patterns_dir}}" ]
            negate => true
            what => previous
        }
    }
}

filter {
    if [type] == "nginx_accesslog" {
        grok {
            match => { "message" => "%{COMBINEDAPACHELOG}" }
        }

        date {
            match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
        }
    }

    if [type] == "mysql_slowlog" {
        multiline {
            pattern => "^# (User@Host|Time):"
            negate => true
            what => previous
        }

        grok {
            match => { "message" => "^# User@Host: %{USER:user}(?:\[[^\]]+\])?\s+@\s+%{HOST:host}?\s+\[%{IP:ip}?\]" }
        }

        grok {
            match => { "message" => "^# Query_time: %{NUMBER:duration:float}\s+Lock_time: %{NUMBER:lock_wait:float} Rows_sent: %{NUMBER:results:int} \s*Rows_examined: %{NUMBER:scanned:int}" }
        }

        grok {
            match => { "message" => "^SET timestamp=%{NUMBER:timestamp};" }
        }

        date {
            match => [ "timestamp", "UNIX" ]
        }

        mutate {
            remove_field => "timestamp"
        }
    }

    if [type] == "php-fpm_slowlog" {
        grok {
            match => { "message" => "^%{PHPFPMSLOWLOGDATE:timestamp}  \[pool %{DATA:pool}\] pid %{NUMBER:pid}" }
            patterns_dir => [ "{{ logstash_patterns_dir}}" ]
        }

        grok {
            match => { "message" => "^script_filename = %{GREEDYDATA:script_filename}" }
        }

        date {
            match => [ "timestamp" , "dd-MMM-yyyy HH:mm:ss" ]
            timezone => "America/Sao_Paulo"
        }
    }
}

output {
    elasticsearch_http {
        host => localhost
    }
}